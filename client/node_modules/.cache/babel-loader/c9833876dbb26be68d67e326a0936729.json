{"ast":null,"code":"import _classCallCheck from \"/home/sanath/ITS1/iCart/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanath/ITS1/iCart/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sanath/ITS1/iCart/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sanath/ITS1/iCart/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sanath/ITS1/iCart/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sanath/ITS1/iCart/client/src/components/chatbot.js\";\nimport React from 'react';\nimport Datalist from './datalist';\nimport './../css/main.css';\nimport Keyboard from \"react-simple-keyboard\";\nimport \"react-simple-keyboard/build/css/index.css\";\n\nvar Chatbot =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chatbot, _React$Component);\n\n  function Chatbot() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Chatbot);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Chatbot)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      layoutName: \"default\",\n      input: \"\"\n    };\n\n    _this.onChange = function (input) {\n      _this.setState({\n        input: input\n      }); // console.log(\"Input changed\", input);\n\n    };\n\n    _this.onKeyPress = function (button) {\n      // console.log(\"Button pressed\", button);\n      if (button === \"{shift}\" || button === \"{lock}\") _this.handleShift();\n    };\n\n    _this.handleShift = function () {\n      var layoutName = _this.state.layoutName;\n\n      _this.setState({\n        layoutName: layoutName === \"default\" ? \"shift\" : \"default\"\n      });\n    };\n\n    _this.sendMessage = function () {\n      document.getElementById('keyBoard').style.display = \"none\";\n      var postContent = document.getElementById('myPost');\n      var postContainer = document.getElementById('postContainer');\n      var myPost = \"<div class=\\\"messageBody\\\">\\n                        \".concat(postContent.value, \"\\n                     </div>\");\n      postContainer.innerHTML = postContainer.innerHTML + myPost;\n      var replyContent = postContent.value;\n      postContent.value = '';\n      var replyPost = \"<div class=\\\"replyBody\\\">\\n         \".concat(replyContent, \"\\n      </div>\");\n      postContainer.innerHTML = postContainer.innerHTML + replyPost;\n      postContent.value = ''; // this.state = this.initialState;\n\n      _this.keyboard.setInput(\"\"); // console.log(this.state.input)\n\n    };\n\n    return _this;\n  }\n\n  _createClass(Chatbot, [{\n    key: \"showKeyboard\",\n    value: function showKeyboard() {\n      document.getElementById('keyBoard').style.display = \"initial\";\n    }\n  }, {\n    key: \"hideKeyboard\",\n    value: function hideKeyboard() {\n      document.getElementById('keyBoard').style.display = \"none\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"chatbot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Datalist, {\n        getCart: this.props.getCart,\n        getData: this.props.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"chatbotHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Need any Help?\"), React.createElement(\"div\", {\n        className: \"messageArea\",\n        id: \"postContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"messageInput\",\n        id: \"myPost\",\n        value: this.state.input,\n        placeholder: \"Tap on the virtual keyboard to start\",\n        onChange: function onChange(e) {\n          return _this2.onChangeInput(e);\n        },\n        onFocus: this.showKeyboard // onBlur={this.hideKeyboard}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"msgSubmit\",\n        onClick: this.sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \">\")), React.createElement(\"div\", {\n        id: \"keyBoard\",\n        className: \"keyboard\",\n        style: {\n          display: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Keyboard, {\n        style: {\n          margin: 0\n        },\n        ref: function ref(r) {\n          return _this2.keyboard = r;\n        },\n        layoutName: this.state.layoutName,\n        onChange: function onChange(input) {\n          return _this2.onChange(input);\n        },\n        onKeyPress: function onKeyPress(button) {\n          return _this2.onKeyPress(button);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Chatbot;\n}(React.Component);\n\nexport default Chatbot;","map":{"version":3,"sources":["/home/sanath/ITS1/iCart/client/src/components/chatbot.js"],"names":["React","Datalist","Keyboard","Chatbot","state","layoutName","input","onChange","setState","onKeyPress","button","handleShift","sendMessage","document","getElementById","style","display","postContent","postContainer","myPost","value","innerHTML","replyContent","replyPost","keyboard","setInput","props","getCart","getData","e","onChangeInput","showKeyboard","margin","r","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Datalist from'./datalist';\nimport './../css/main.css';\nimport Keyboard from \"react-simple-keyboard\";\nimport \"react-simple-keyboard/build/css/index.css\";\n\nclass Chatbot extends React.Component {\n   state = {\n      layoutName: \"default\",\n      input: \"\"\n    };\n   // constructor(props) {\n   //    super(props);\n   //    this.initialState = {\n   //       layoutName: \"default\",\n   //       input: \"\"\n   //    };\n   //    this.state = this.initialState;\n   // }\n  \n    onChange = input => {\n      this.setState({\n        input: input\n      });\n      // console.log(\"Input changed\", input);\n    };\n  \n    onKeyPress = button => {\n      // console.log(\"Button pressed\", button);\n      if (button === \"{shift}\" || button === \"{lock}\") this.handleShift();\n    };\n  \n    handleShift = () => {\n      let layoutName = this.state.layoutName;\n  \n      this.setState({\n        layoutName: layoutName === \"default\" ? \"shift\" : \"default\"\n      });\n    };\n  \n   //  onChangeInput = event => {\n   //    let input = event.target.value;\n   //    console.log(input)\n   //    this.setState(\n   //      {\n   //        input: input\n   //      },\n   //      () => {\n   //        this.keyboard.setInput(input);\n   //      }\n   //    );      \n   //  };\n\n   sendMessage = () => {\n      document.getElementById('keyBoard').style.display = \"none\"\n      var postContent = document.getElementById('myPost');\n      var postContainer = document.getElementById('postContainer');\n      var myPost = `<div class=\"messageBody\">\n                        ${postContent.value}\n                     </div>`;\n      postContainer.innerHTML=postContainer.innerHTML+myPost;\n      var replyContent = postContent.value;\n      postContent.value='';\n      var replyPost = `<div class=\"replyBody\">\n         ${replyContent}\n      </div>`;\n      postContainer.innerHTML=postContainer.innerHTML+replyPost;\n      postContent.value='';\n      // this.state = this.initialState;\n      this.keyboard.setInput(\"\");\n      // console.log(this.state.input)\n   }\n   showKeyboard(){\n      document.getElementById('keyBoard').style.display = \"initial\"\n   }\n   hideKeyboard(){\n      document.getElementById('keyBoard').style.display = \"none\"\n   }\n   render() {\n      return (\n         <div className=\"chatbot\">\n            <Datalist getCart = {this.props.getCart} getData = {this.props.getData}/>\n            <div className=\"chatbotHeader\">Need any Help?</div>\n            <div className=\"messageArea\" id=\"postContainer\"></div>\n            <div>\n               <textarea \n                  className=\"messageInput\"\n                  id='myPost'\n                  value={this.state.input}\n                  placeholder={\"Tap on the virtual keyboard to start\"}\n                  onChange={e => this.onChangeInput(e)}\n                  onFocus={this.showKeyboard}\n                  // onBlur={this.hideKeyboard}\n               >\n               </textarea>\n               <button className=\"msgSubmit\" onClick={this.sendMessage}>></button>\n            </div>\n            <div id=\"keyBoard\" className='keyboard' style={{display: \"none\"}}>\n               <Keyboard\n                  style={{margin: 0}}\n                  ref={r => (this.keyboard = r)}\n                  layoutName={this.state.layoutName}\n                  onChange={input => this.onChange(input)}\n                  onKeyPress={button => this.onKeyPress(button)}\n               />\n            </div>\n         </div>\n      );\n   }\n}\nexport default Chatbot;\n"]},"metadata":{},"sourceType":"module"}